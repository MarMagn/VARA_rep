
> library(tidyverse)

> library(pROC)

> test <- sample(nrow(nn_data_90_wc), size = round(nrow(nn_data)/10))

> train <- which(!1:nrow(nn_data) %in% test)

> getSplit <- function(ds, rows) {
+   outcome <- ds$has_AE
+   outcome <- to_categorical(outcome, 2)
+   
+   list(
+     outcome = outcome[rows,],
+ .... [TRUNCATED] 

> test_data <- getSplit(nn_data_90, test)

> train_data <- getSplit(nn_data_90, train)

> model <- keras_model_sequential() %>% 
+   layer_dense(units = 49, activation = 'relu', input_shape = ncol(test_data$data)) %>% 
+   layer_dropout(r .... [TRUNCATED] 

> model %>% compile(
+   loss = 'binary_crossentropy',
+   optimizer = optimizer_rmsprop(lr = 0.001),
+   metrics = c('accuracy'))

> history <- model %>% fit(
+   train_data$data, train_data$outcome, 
+   epochs = 100, batch_size = 128, 
+   validation_split = 0.2)
