{
  "message": "ImportError: You need the TensorFlow module installed to use TensorBoard.",
  "traceback": ["py_call_impl(callable, dots$args, dots$keywords)", "(structure(function (...) \n{\n    dots <- py_resolve_dots(list(...))\n    result <- py_call_impl(callable, dots$args, dots$keywords)\n    if (convert) {\n        result <- py_to_r(result)\n        if (is.null(result)) \n            invisible(result)\n        else result\n    }\n    else {\n        result\n    }\n}, class = c(\"python.builtin.type\", \"python.builtin.object\"), py_object = <environment>))(log_dir = \"runs/2018-10-10T12-46-07Z/logs\", \n    histogram_freq = 0L, write_graph = TRUE, write_images = FALSE, \n    embeddings_freq = 0L, batch_size = 32L, write_grads = FALSE)", "do.call(keras$callbacks$TensorBoard, args)", "callback_tensorboard()", "append(callbacks, callback_tensorboard())", "normalize_callbacks(view_metrics, callbacks)", "fit(., train_data$data, train_data$outcome, epochs = 20, batch_size = 128, \n    validation_split = 0.2)", "function_list[[k]](value)", "withVisible(function_list[[k]](value))", "freduce(value, `_function_list`)", "`_fseq`(`_lhs`)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "eval(quote(`_fseq`(`_lhs`)), env, env)", "withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))", "network_mdl %>% fit(train_data$data, train_data$outcome, epochs = 20, \n    batch_size = 128, validation_split = 0.2)", "runModel(neural_datasets$`30_wc`)", "eval(ei, envir)", "eval(ei, envir)", "training_run(\"nn_model.R\")"]
}
